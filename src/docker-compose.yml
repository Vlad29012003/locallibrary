version: '3.8'

services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=locallibrary
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      bash -c "python manage.py makemigrations &&
              python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              gunicorn core.wsgi:application --bind 127.0.0.1:8000 --timeout 10000 --limit-request-field_size 16384 --workers 2"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - 8008
    depends_on:
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.basa
      - POSTGRES_DB=locallibrary
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DEBUG=True
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume:

networks:
  app-network:
    driver: bridge